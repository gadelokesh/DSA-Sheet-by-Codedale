class Solution:
    def nearestPalindromic(self, n: str) -> str:
        length = len(n)
        if n == "1":
            return "0"
        candidates = set()
        prefix = int(n[:(length + 1) // 2])
        for diff in [-1, 0, 1]:
            new_prefix = str(prefix + diff)
            if length % 2 == 0:
                candidate = new_prefix + new_prefix[::-1]
            else:
                candidate = new_prefix + new_prefix[-2::-1]
            candidates.add(int(candidate))
        candidates.add(10 ** (length - 1) - 1)
        candidates.add(10 ** length + 1)
        num = int(n)
        candidates.discard(num)
        return str(min(candidates, key=lambda x: (abs(x - num), x)))
